---
- hosts: master
  remote_user: vagrant
  become: yes
  become_method: sudo
  tasks:
    - name: Install os packages
      apt: pkg={{item}} state=present update_cache=yes
      with_items:
        - wget
        - curl
        - g++
        - gcc
        - zookeeper-bin
        - zookeeperd
        - software-properties-common
        - python-software-properties
        - python-setuptools
        - python-pip
        - python-dev
        - libcurl4-openssl-dev
        - libsasl2-2
        - libsasl2-dev
        - libcurl3
        - golang
        - git
        - bind9

  - name: "Add Java 8 PPA requirements for marathon"
    apt_repository: repo='ppa:webupd8team/java'

  - name: "Get mesosphere key"
    apt_key: id=E56151BF keyserver=keyserver.ubuntu.com state=present

  - name: "Add Mesosphere repository"
    apt_repository: repo="deb http://repos.mesosphere.com/{{ansible_distribution|lower}} {{ansible_distribution_release|lower}} main" state=present

  - name: "Run an apt-get update"
    apt: update_cache=yes

  - name: "Accept Java 8 Licence"
    shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | tee /etc/oracle-java-8-licence-acceptance | /usr/bin/debconf-set-selections
    args:
      creates: /etc/oracle-java-8-licence-acceptance

  - name: "Install Packages"
    apt: pkg={{item}} state=present update_cache=yes
    with_items:
      - oracle-java8-installer
      - oracle-java8-set-default
      - mesos
      - marathon
      - docker.io
      - chronos

  - name: "Update hosts file"
    template: src=./hosts.j2 dest=/etc/hosts

  - name: "Configure zookeeper ID"
    template: src=./myid.j2 dest=/etc/zookeeper/conf/myid

  - name: "configure containerizers"
    lineinfile: dest=/etc/mesos-slave/containerizers create=yes line="docker,mesos"

  - name: "start zookeeper"
    service: name=zookeeper state=started enabled=yes

  - name: "start mesos-master"
    service: name=mesos-master state=started enabled=yes

  - name: start mesos-slave
    service: name=mesos-slave state=started enabled=yes

  - name: "start marathon"
    service: name=marathon state=started enabled=yes

  - name: start chronos
    service: name=chronos state=started enabled=yes

  - name: start docker
    service: name=docker state=started enabled=yes

  - name: build/configure mesos-dns
    become_user: vagrant
    shell: sh /vagrant/installdns.sh

  - name: configure dns
    template: src=./resolv.conf.j2 dest=/etc/resolv.conf

#  - name: install outyet
#    shell: docker load --input=/vagrant/outyet.tar.gz

- hosts: nodes
  remote_user: vagrant
  become: yes
  become_method: sudo
  tasks:
    - name: update hosts file
     template: src=./hosts.j2 dest=/etc/hosts

    - name: "Add Java 8 PPA requirements for marathon"
      apt_repository: repo='ppa:webupd8team/java'

    - name: "Get mesosphere key"
      apt_key: id=E56151BF keyserver=keyserver.ubuntu.com state=present

    - name: "Add Mesosphere repository"
      apt_repository: repo="deb http://repos.mesosphere.com/{{ansible_distribution|lower}} {{ansible_distribution_release|lower}} main" state=present

    - name: "Run an apt-get update"
      apt: update_cache=yes

    - name: "Accept Java 8 Licence"
      shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | tee /etc/oracle-java-8-licence-acceptance | /usr/bin/debconf-set-selections
      args:
        creates: /etc/oracle-java-8-licence-acceptance

    - name: "Install Packages"
      apt: pkg={{item}} state=present update_cache=yes
      with_items:
          - oracle-java8-installer
          - oracle-java8-set-default
          - mesos
          - docker.io

    - name: configure dns
      template: src=./resolv.conf.j2 dest=/etc/resolv.conf

    - name: configure containerizers
      lineinfile: dest=/etc/mesos-slave/containerizers create=yes line="docker,mesos"

    - name: set zookeeper master
      replace: dest=/etc/mesos/zk regexp="localhost" replace="192.168.33.10"

    - name: start mesos-slave
      service: name=mesos-slave state=started enabled=yes

    - name: start docker
      service: name=docker state=started enabled=yes

#    - name: install outyet
#      shell: docker load --input=/vagrant/outyet.tar.gz